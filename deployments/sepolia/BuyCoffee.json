{
  "address": "0x108Ad80b31f2e0518C72dA5f3E18ef176b8b33cE",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BuyCoffee__NotEnoughMoneyTBuyCoffee",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BuyCoffee__NotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "CoffeeBought",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_message",
          "type": "string"
        }
      ],
      "name": "buyCoffee",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllMemos",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "message",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct BuyCoffee.Memo[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getMemo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "message",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct BuyCoffee.Memo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_memos",
      "outputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x67955b4b5d70deb023aafd5137a208962408e4fbbbde2dcb09c794d6e6a98a4e",
  "receipt": {
    "to": null,
    "from": "0x59712919e458454a4CE7c2C04880de035d7D4efa",
    "contractAddress": "0x108Ad80b31f2e0518C72dA5f3E18ef176b8b33cE",
    "transactionIndex": 18,
    "gasUsed": "1122647",
    "logsBloom": "0x
    "blockHash": "0x5d164807698008a074845d0e0453e7149c921f916ea330ecc71dc1896967b54b",
    "transactionHash": "0x67955b4b5d70deb023aafd5137a208962408e4fbbbde2dcb09c794d6e6a98a4e",
    "logs": [],
    "blockNumber": 6323567,
    "cumulativeGasUsed": "3061306",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "e8be578b99331ab082006f34a8498031",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BuyCoffee__NotEnoughMoneyTBuyCoffee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BuyCoffee__NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CoffeeBought\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"buyCoffee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllMemos\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct BuyCoffee.Memo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getMemo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct BuyCoffee.Memo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_memos\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"buyCoffee(string,string)\":{\"params\":{\"_message\":\"message from the purchaser\",\"_name\":\"name of the purchaser of coffee\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyCoffee(string,string)\":{\"notice\":\"Buys coffee for the owner\"},\"getOwner()\":{\"notice\":\"Returns the address of the contract owner\"},\"withdraw()\":{\"notice\":\"Owner of the contract can withdraw all the funds\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BuyCoffee.sol\":\"BuyCoffee\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BuyCoffee.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\n// Errors\\r\\nerror BuyCoffee__NotEnoughMoneyTBuyCoffee();\\r\\nerror BuyCoffee__NotOwner();\\r\\n\\r\\ncontract BuyCoffee {\\r\\n    struct Memo {\\r\\n        address from;\\r\\n        string name;\\r\\n        string message;\\r\\n        uint256 amount;\\r\\n        uint256 timestamp;\\r\\n    }\\r\\n\\r\\n    // Events\\r\\n    event CoffeeBought(\\r\\n        address indexed from,\\r\\n        string name,\\r\\n        string message,\\r\\n        uint256 amount,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n\\r\\n    // State variables\\r\\n    address payable immutable i_owner;\\r\\n    Memo[] public s_memos;\\r\\n\\r\\n    constructor() {\\r\\n        i_owner = payable(msg.sender);\\r\\n    }\\r\\n\\r\\n    // Modifiers\\r\\n    modifier onlyOwner() {\\r\\n        if (msg.sender != i_owner) revert BuyCoffee__NotOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Buys coffee for the owner\\r\\n     * @param _name name of the purchaser of coffee\\r\\n     * @param _message message from the purchaser\\r\\n     */\\r\\n    function buyCoffee(\\r\\n        string memory _name,\\r\\n        string memory _message\\r\\n    ) public payable {\\r\\n        if (msg.value <= 0) {\\r\\n            revert BuyCoffee__NotEnoughMoneyTBuyCoffee();\\r\\n        }\\r\\n\\r\\n        s_memos.push(\\r\\n            Memo(msg.sender, _name, _message, msg.value, block.timestamp)\\r\\n        );\\r\\n\\r\\n        emit CoffeeBought(\\r\\n            msg.sender,\\r\\n            _name,\\r\\n            _message,\\r\\n            msg.value,\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Owner of the contract can withdraw all the funds\\r\\n     */\\r\\n    function withdraw() public onlyOwner {\\r\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\r\\n        require(success);\\r\\n    }\\r\\n\\r\\n    // Getter functions\\r\\n\\r\\n    /**\\r\\n     * Returns the address of the contract owner\\r\\n     */\\r\\n    function getOwner() public view returns(address) {\\r\\n        return i_owner;\\r\\n    } \\r\\n\\r\\n    function getMemo(uint256 _index) public view returns(Memo memory) {\\r\\n        return s_memos[_index];\\r\\n    } \\r\\n\\r\\n    function getAllMemos() public view returns(Memo[] memory) {\\r\\n        return s_memos;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x93fad7beff72419fb1a4a2bca7974836faf98fdd16b5733b505800ea2840bdae\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100555760003560e01c8063204206e11461005a5780633ccfd60b146100765780635a681c541461008d57806375f31470146100b8578063893d20e8146100f5578063eed24a5b14610120575b600080fd5b610074600480360381019061006f9190610af6565b610161565b005b34801561008257600080fd5b5061008b6102e4565b005b34801561009957600080fd5b506100a2610402565b6040516100af9190610d86565b60405180910390f35b3480156100c457600080fd5b506100df60048036038101906100da9190610dd4565b6105ef565b6040516100ec9190610e7e565b60405180910390f35b34801561010157600080fd5b5061010a6107b9565b6040516101179190610eaf565b60405180910390f35b34801561012c57600080fd5b5061014760048036038101906101429190610dd4565b6107e1565b604051610158959493929190610f23565b60405180910390f35b6000341161019b576040517ff4ff915b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200134815260200142815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908161025f9190611190565b5060408201518160020190816102759190611190565b50606082015181600301556080820151816004015550503373ffffffffffffffffffffffffffffffffffffffff167f53e5d749474757cbfb99d9813c8e477d97b4b225dc8f02a50de6fce0d799cbb6838334426040516102d89493929190611262565b60405180910390a25050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610369576040517f63f58b5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516103af906112e6565b60006040518083038185875af1925050503d80600081146103ec576040519150601f19603f3d011682016040523d82523d6000602084013e6103f1565b606091505b50509050806103ff57600080fd5b50565b60606000805480602002602001604051908101604052809291908181526020016000905b828210156105e657838290600052602060002090600502016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546104af90610fb3565b80601f01602080910402602001604051908101604052809291908181526020018280546104db90610fb3565b80156105285780601f106104fd57610100808354040283529160200191610528565b820191906000526020600020905b81548152906001019060200180831161050b57829003601f168201915b5050505050815260200160028201805461054190610fb3565b80601f016020809104026020016040519081016040528092919081815260200182805461056d90610fb3565b80156105ba5780601f1061058f576101008083540402835291602001916105ba565b820191906000526020600020905b81548152906001019060200180831161059d57829003601f168201915b505050505081526020016003820154815260200160048201548152505081526020019060010190610426565b50505050905090565b6105f7610957565b6000828154811061060b5761060a6112fb565b5b90600052602060002090600502016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461068a90610fb3565b80601f01602080910402602001604051908101604052809291908181526020018280546106b690610fb3565b80156107035780601f106106d857610100808354040283529160200191610703565b820191906000526020600020905b8154815290600101906020018083116106e657829003601f168201915b5050505050815260200160028201805461071c90610fb3565b80601f016020809104026020016040519081016040528092919081815260200182805461074890610fb3565b80156107955780601f1061076a57610100808354040283529160200191610795565b820191906000526020600020905b81548152906001019060200180831161077857829003601f168201915b50505050508152602001600382015481526020016004820154815250509050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600081815481106107f157600080fd5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461083a90610fb3565b80601f016020809104026020016040519081016040528092919081815260200182805461086690610fb3565b80156108b35780601f10610888576101008083540402835291602001916108b3565b820191906000526020600020905b81548152906001019060200180831161089657829003601f168201915b5050505050908060020180546108c890610fb3565b80601f01602080910402602001604051908101604052809291908181526020018280546108f490610fb3565b80156109415780601f1061091657610100808354040283529160200191610941565b820191906000526020600020905b81548152906001019060200180831161092457829003601f168201915b5050505050908060030154908060040154905085565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160008152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a03826109ba565b810181811067ffffffffffffffff82111715610a2257610a216109cb565b5b80604052505050565b6000610a3561099c565b9050610a4182826109fa565b919050565b600067ffffffffffffffff821115610a6157610a606109cb565b5b610a6a826109ba565b9050602081019050919050565b82818337600083830152505050565b6000610a99610a9484610a46565b610a2b565b905082815260208101848484011115610ab557610ab46109b5565b5b610ac0848285610a77565b509392505050565b600082601f830112610add57610adc6109b0565b5b8135610aed848260208601610a86565b91505092915050565b60008060408385031215610b0d57610b0c6109a6565b5b600083013567ffffffffffffffff811115610b2b57610b2a6109ab565b5b610b3785828601610ac8565b925050602083013567ffffffffffffffff811115610b5857610b576109ab565b5b610b6485828601610ac8565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bc582610b9a565b9050919050565b610bd581610bba565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c15578082015181840152602081019050610bfa565b60008484015250505050565b6000610c2c82610bdb565b610c368185610be6565b9350610c46818560208601610bf7565b610c4f816109ba565b840191505092915050565b6000819050919050565b610c6d81610c5a565b82525050565b600060a083016000830151610c8b6000860182610bcc565b5060208301518482036020860152610ca38282610c21565b91505060408301518482036040860152610cbd8282610c21565b9150506060830151610cd26060860182610c64565b506080830151610ce56080860182610c64565b508091505092915050565b6000610cfc8383610c73565b905092915050565b6000602082019050919050565b6000610d1c82610b6e565b610d268185610b79565b935083602082028501610d3885610b8a565b8060005b85811015610d745784840389528151610d558582610cf0565b9450610d6083610d04565b925060208a01995050600181019050610d3c565b50829750879550505050505092915050565b60006020820190508181036000830152610da08184610d11565b905092915050565b610db181610c5a565b8114610dbc57600080fd5b50565b600081359050610dce81610da8565b92915050565b600060208284031215610dea57610de96109a6565b5b6000610df884828501610dbf565b91505092915050565b600060a083016000830151610e196000860182610bcc565b5060208301518482036020860152610e318282610c21565b91505060408301518482036040860152610e4b8282610c21565b9150506060830151610e606060860182610c64565b506080830151610e736080860182610c64565b508091505092915050565b60006020820190508181036000830152610e988184610e01565b905092915050565b610ea981610bba565b82525050565b6000602082019050610ec46000830184610ea0565b92915050565b600082825260208201905092915050565b6000610ee682610bdb565b610ef08185610eca565b9350610f00818560208601610bf7565b610f09816109ba565b840191505092915050565b610f1d81610c5a565b82525050565b600060a082019050610f386000830188610ea0565b8181036020830152610f4a8187610edb565b90508181036040830152610f5e8186610edb565b9050610f6d6060830185610f14565b610f7a6080830184610f14565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610fcb57607f821691505b602082108103610fde57610fdd610f84565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026110467fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611009565b6110508683611009565b95508019841693508086168417925050509392505050565b6000819050919050565b600061108d61108861108384610c5a565b611068565b610c5a565b9050919050565b6000819050919050565b6110a783611072565b6110bb6110b382611094565b848454611016565b825550505050565b600090565b6110d06110c3565b6110db81848461109e565b505050565b5b818110156110ff576110f46000826110c8565b6001810190506110e1565b5050565b601f8211156111445761111581610fe4565b61111e84610ff9565b8101602085101561112d578190505b61114161113985610ff9565b8301826110e0565b50505b505050565b600082821c905092915050565b600061116760001984600802611149565b1980831691505092915050565b60006111808383611156565b9150826002028217905092915050565b61119982610bdb565b67ffffffffffffffff8111156111b2576111b16109cb565b5b6111bc8254610fb3565b6111c7828285611103565b600060209050601f8311600181146111fa57600084156111e8578287015190505b6111f28582611174565b86555061125a565b601f19841661120886610fe4565b60005b828110156112305784890151825560018201915060208501945060208101905061120b565b8683101561124d5784890151611249601f891682611156565b8355505b6001600288020188555050505b505050505050565b6000608082019050818103600083015261127c8187610edb565b905081810360208301526112908186610edb565b905061129f6040830185610f14565b6112ac6060830184610f14565b95945050505050565b600081905092915050565b50565b60006112d06000836112b5565b91506112db826112c0565b600082019050919050565b60006112f1826112c3565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220a5f9d0df57b5f692c7ee9d1c867f7743104e095e8584e46ad2afaf6a04afb6b964736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "buyCoffee(string,string)": {
        "params": {
          "_message": "message from the purchaser",
          "_name": "name of the purchaser of coffee"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "buyCoffee(string,string)": {
        "notice": "Buys coffee for the owner"
      },
      "getOwner()": {
        "notice": "Returns the address of the contract owner"
      },
      "withdraw()": {
        "notice": "Owner of the contract can withdraw all the funds"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 34,
        "contract": "contracts/BuyCoffee.sol:BuyCoffee",
        "label": "s_memos",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_struct(Memo)16_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Memo)16_storage)dyn_storage": {
        "base": "t_struct(Memo)16_storage",
        "encoding": "dynamic_array",
        "label": "struct BuyCoffee.Memo[]",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Memo)16_storage": {
        "encoding": "inplace",
        "label": "struct BuyCoffee.Memo",
        "members": [
          {
            "astId": 7,
            "contract": "contracts/BuyCoffee.sol:BuyCoffee",
            "label": "from",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 9,
            "contract": "contracts/BuyCoffee.sol:BuyCoffee",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 11,
            "contract": "contracts/BuyCoffee.sol:BuyCoffee",
            "label": "message",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 13,
            "contract": "contracts/BuyCoffee.sol:BuyCoffee",
            "label": "amount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 15,
            "contract": "contracts/BuyCoffee.sol:BuyCoffee",
            "label": "timestamp",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}